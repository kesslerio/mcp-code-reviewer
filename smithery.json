{
  "$schema": "https://smithery.dev/schemas/manifest.json",
  "name": "vibe-check-mcp",
  "version": "0.2.0",
  "description": "AI coding safety net - anti-pattern detection for engineering decisions with real-time feedback",
  "author": "Martin Kessler <kesslerio@users.noreply.github.com>",
  "license": "Apache-2.0",
  "homepage": "https://github.com/kesslerio/vibe-check-mcp",
  "repository": {
    "type": "git",
    "url": "https://github.com/kesslerio/vibe-check-mcp.git"
  },
  "keywords": ["mcp", "ai", "coding", "anti-patterns", "engineering", "safety", "claude", "fastmcp"],
  "mcp": {
    "server": {
      "command": "python",
      "args": ["-m", "vibe_check.server"],
      "transport": "stdio",
      "env": {
        "PYTHONPATH": "${PACKAGE_PATH}/src"
      }
    },
    "capabilities": {
      "tools": true,
      "resources": false,
      "prompts": false
    },
    "tools": [
      {
        "name": "analyze_text_nollm",
        "description": "Fast text analysis using direct pattern detection (no LLM calls)"
      },
      {
        "name": "analyze_issue_nollm", 
        "description": "Fast GitHub issue analysis using direct pattern detection"
      },
      {
        "name": "analyze_pr_nollm",
        "description": "Fast PR analysis using direct pattern detection"
      },
      {
        "name": "review_pr_comprehensive",
        "description": "Advanced PR review with file type analysis and Claude integration"
      },
      {
        "name": "check_integration_alternatives",
        "description": "Official alternative check for integration decisions"
      },
      {
        "name": "analyze_integration_decision_text",
        "description": "Analyze text for integration decision anti-patterns"
      },
      {
        "name": "vibe_check_mentor",
        "description": "Senior engineer collaborative reasoning with multi-perspective feedback"
      },
      {
        "name": "analyze_doom_loops",
        "description": "AI doom loop detection and analysis paralysis prevention"
      },
      {
        "name": "server_status",
        "description": "Get server status and capabilities"
      }
    ]
  },
  "dependencies": {
    "python": ">=3.8",
    "fastmcp": ">=2.8.1",
    "mcp": ">=1.9.4"
  },
  "envTemplate": {
    "GITHUB_TOKEN": {
      "description": "GitHub Personal Access Token for repository access (required for GitHub integration)",
      "required": false,
      "type": "string",
      "pattern": "^ghp_[a-zA-Z0-9]{36}$"
    },
    "PYTHONPATH": {
      "description": "Path to Python source code directory",
      "required": true,
      "type": "string",
      "default": "${PACKAGE_PATH}/src"
    },
    "LOG_LEVEL": {
      "description": "Logging level for the MCP server",
      "required": false,
      "type": "string",
      "enum": ["DEBUG", "INFO", "WARNING", "ERROR"],
      "default": "INFO"
    }
  },
  "installInstructions": {
    "pre": [
      "pip install -r requirements.txt"
    ],
    "post": [
      "echo '✅ Vibe Check MCP installed successfully! Configure your GitHub token if needed for GitHub integration.'"
    ]
  },
  "validation": {
    "testCommand": "python -c \"import sys; sys.path.insert(0, 'src'); from vibe_check.server import mcp; print('✅ MCP server loads successfully')\"",
    "healthCheck": "python -c \"import sys; sys.path.insert(0, 'src'); import vibe_check; print('✅ Vibe Check MCP is ready')\""
  }
}